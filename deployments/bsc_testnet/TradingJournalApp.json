{
  "address": "0x60c0B4B06Be483d1E9bD6cE8378f85BD02f519B9",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "journalAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "Name",
          "type": "string"
        }
      ],
      "name": "JournalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "TradeAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_journalName",
          "type": "string"
        }
      ],
      "name": "Exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_journalName",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amountBuy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stopLossPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sellDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sellPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct Trade",
          "name": "trade",
          "type": "tuple"
        }
      ],
      "name": "addTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_JournalName",
          "type": "string"
        }
      ],
      "name": "createJournal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "userToJournal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "initialized",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "journalAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc78fb46fac93041105e75c94883fea436553e9078eac5c0b7a8f4373f69c7007",
  "receipt": {
    "to": null,
    "from": "0xB341844B93831df1aBe8705f0b8260eCFd8E5Ce7",
    "contractAddress": "0x60c0B4B06Be483d1E9bD6cE8378f85BD02f519B9",
    "transactionIndex": 6,
    "gasUsed": "1110871",
    "logsBloom": "0x
    "blockHash": "0xf354bd1f4cc7b0ada77471d691db54d90ffb244a891239889aa7dc0ff34db8e1",
    "transactionHash": "0xc78fb46fac93041105e75c94883fea436553e9078eac5c0b7a8f4373f69c7007",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 12764593,
        "transactionHash": "0xc78fb46fac93041105e75c94883fea436553e9078eac5c0b7a8f4373f69c7007",
        "address": "0x60c0B4B06Be483d1E9bD6cE8378f85BD02f519B9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b341844b93831df1abe8705f0b8260ecfd8e5ce7"
        ],
        "data": "0x",
        "logIndex": 17,
        "blockHash": "0xf354bd1f4cc7b0ada77471d691db54d90ffb244a891239889aa7dc0ff34db8e1"
      }
    ],
    "blockNumber": 12764593,
    "cumulativeGasUsed": "3665025",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "e42097915ddbabdb208a5ee35840f2e1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"journalAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"}],\"name\":\"JournalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TradeAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_journalName\",\"type\":\"string\"}],\"name\":\"Exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_journalName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amountBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stopLossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct Trade\",\"name\":\"trade\",\"type\":\"tuple\"}],\"name\":\"addTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_JournalName\",\"type\":\"string\"}],\"name\":\"createJournal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userToJournal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"journalAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/TradingJournalApp.sol\":\"TradingJournalApp\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"Contracts/TradingJournal.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.7;\\r\\npragma abicoder v2;\\r\\n\\r\\nimport \\\"../Structs/Trade.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingJournal is Ownable{\\r\\n\\r\\n    address journalOwner;\\r\\n    Trade[] trades;\\r\\n\\r\\n    constructor(address _journalOwner){\\r\\n        journalOwner = _journalOwner;\\r\\n    }\\r\\n\\r\\n    function addTrade(Trade memory trade) public onlyOwner{\\r\\n        trades.push(trade);\\r\\n    }\\r\\n\\r\\n    function changeJournalOwner(address _journalOwner, address _newJournalOwner) public onlyOwner{\\r\\n\\r\\n        // TODO: mettre des require dans la fonction qui va apeller celle-ci\\r\\n\\r\\n        require(journalOwner == _journalOwner);\\r\\n        journalOwner = _newJournalOwner;\\r\\n    }\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n\",\"keccak256\":\"0x834d11937160b4c14006c32a0921cd032d816d490da25dfaaf92086cb17a9bf2\",\"license\":\"GPL-3.0\"},\"Contracts/TradingJournalApp.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./TradingJournal.sol\\\";\\r\\nimport \\\"../Structs/UserJournal.sol\\\";\\r\\n\\r\\ncontract TradingJournalApp is Ownable {\\r\\n    // Associate journals to user, and journal's name to address\\r\\n    mapping(address => mapping(string => UserJournal)) public userToJournal;\\r\\n\\r\\n    event JournalCreated(address journalAddress, address creator, string Name);\\r\\n    // TODO: Complete event\\r\\n    event TradeAdded();\\r\\n\\r\\n    function Exists(string memory _journalName) public view returns(bool exists){\\r\\n        return userToJournal[msg.sender][_journalName].initialized;\\r\\n    }\\r\\n\\r\\n    function createJournal(string memory _JournalName) public {\\r\\n        require(bytes(_JournalName).length != 0,\\\"TradingJournalApp::Journal's name cannot be empty\\\");\\r\\n        require(!Exists(_JournalName),\\\"TradingJournalApp::Journal already exist\\\");\\r\\n\\r\\n        // Create new journal for user\\r\\n        address newTradingJournalAddr = address(new TradingJournal(msg.sender)); \\r\\n        \\r\\n        UserJournal storage newUserJournal = userToJournal[msg.sender][_JournalName];\\r\\n\\r\\n        newUserJournal.initialized = true;\\r\\n        newUserJournal.journalAddress = newTradingJournalAddr;\\r\\n\\r\\n        emit JournalCreated(newTradingJournalAddr,msg.sender,_JournalName);\\r\\n        \\r\\n    }\\r\\n\\r\\n    function addTrade(string memory _journalName, Trade memory trade) public {\\r\\n        require(Exists(_journalName),\\\"TradingJournalApp::Journal don't exist\\\");\\r\\n\\r\\n        TradingJournal(userToJournal[msg.sender][_journalName].journalAddress).addTrade(trade);\\r\\n\\r\\n        emit TradeAdded();\\r\\n\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x56e03aaac311b1e7e55fbe023eaf4ab67cea1791b0a26c9737f7d8ca647a98b2\",\"license\":\"GPL-3.0\"},\"Structs/Trade.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nstruct Trade{\\r\\n    string name;\\r\\n    string symbol;\\r\\n\\r\\n    uint256 amountBuy;\\r\\n\\r\\n    uint256 buyDate;\\r\\n    uint256 buyPrice;\\r\\n\\r\\n    uint256 stopLossPrice;\\r\\n\\r\\n    uint256 sellDate;\\r\\n    uint256 sellPrice;\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xcc844b667a1dc45884d821a23bd5e13065f9e59bddee7db806e694957a1a7a31\",\"license\":\"GPL-3.0\"},\"Structs/UserJournal.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nstruct UserJournal{\\r\\n    bool initialized;\\r\\n    address journalAddress;\\r\\n}\",\"keccak256\":\"0x3e3bd6d953e90636a24bc6e28f364490db5ef4cac70966429d4d7515ac53e99a\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6112c08061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c8063715018a61161005b578063715018a61461012c5780638da5cb5b14610134578063f2fde38b1461014f578063fa2fe6fc1461016257600080fd5b80621e9335146100815780631ed713cc146100f457806342a5615d14610117575b600080fd5b6100d061008f36600461075e565b6001602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff81169061010090046001600160a01b031682565b6040805192151583526001600160a01b039091166020830152015b60405180910390f35b6101076101023660046107ac565b610175565b60405190151581526020016100eb565b61012a6101253660046107e9565b6101ab565b005b61012a6102ff565b6000546040516001600160a01b0390911681526020016100eb565b61012a61015d36600461073c565b610365565b61012a6101703660046107ac565b610447565b33600090815260016020526040808220905161019290849061090a565b9081526040519081900360200190205460ff1692915050565b6101b482610175565b61022b5760405162461bcd60e51b815260206004820152602660248201527f54726164696e674a6f75726e616c4170703a3a4a6f75726e616c20646f6e277460448201527f206578697374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3360009081526001602052604090819020905161024990849061090a565b908152604051908190036020018120547fe979e1250000000000000000000000000000000000000000000000000000000082526001600160a01b03610100909104169063e979e125906102a090849060040161095b565b600060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b50506040517f89aba1e7f5380a5962b1f94668186918bd92fd7074487de809e4f6fe9ddf4ac5925060009150a15050565b6000546001600160a01b031633146103595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610222565b610363600061061e565b565b6000546001600160a01b031633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610222565b6001600160a01b03811661043b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610222565b6104448161061e565b50565b80516104bb5760405162461bcd60e51b815260206004820152603160248201527f54726164696e674a6f75726e616c4170703a3a4a6f75726e616c2773206e616d60448201527f652063616e6e6f7420626520656d7074790000000000000000000000000000006064820152608401610222565b6104c481610175565b156105375760405162461bcd60e51b815260206004820152602860248201527f54726164696e674a6f75726e616c4170703a3a4a6f75726e616c20616c72656160448201527f64792065786973740000000000000000000000000000000000000000000000006064820152608401610222565b60003360405161054690610686565b6001600160a01b039091168152602001604051809103906000f080158015610572573d6000803e3d6000fd5b50336000908152600160205260408082209051929350909161059590859061090a565b90815260405190819003602001812080546001600160a01b038516610100027fffffffffffffffffffffff00000000000000000000000000000000000000000090911617600117815591507fad448cc016aa50d0399a7df873e09e3fad7ecb439ede634c9b865cf541293fd89061061190849033908790610926565b60405180910390a1505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61082180610a6a83390190565b80356001600160a01b03811681146106aa57600080fd5b919050565b600082601f8301126106c057600080fd5b813567ffffffffffffffff808211156106db576106db610a3a565b604051601f8301601f19908116603f0116810190828211818310171561070357610703610a3a565b8160405283815286602085880101111561071c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561074e57600080fd5b61075782610693565b9392505050565b6000806040838503121561077157600080fd5b61077a83610693565b9150602083013567ffffffffffffffff81111561079657600080fd5b6107a2858286016106af565b9150509250929050565b6000602082840312156107be57600080fd5b813567ffffffffffffffff8111156107d557600080fd5b6107e1848285016106af565b949350505050565b600080604083850312156107fc57600080fd5b823567ffffffffffffffff8082111561081457600080fd5b610820868387016106af565b9350602085013591508082111561083657600080fd5b90840190610100828703121561084b57600080fd5b6108536109e0565b82358281111561086257600080fd5b61086e888286016106af565b82525060208301358281111561088357600080fd5b61088f888286016106af565b60208301525060408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201528093505050509250929050565b600081518084526108f6816020860160208601610a0a565b601f01601f19169290920160200192915050565b6000825161091c818460208701610a0a565b9190910192915050565b60006001600160a01b0380861683528085166020840152506060604083015261095260608301846108de565b95945050505050565b602081526000825161010080602085015261097a6101208501836108de565b91506020850151601f1985840301604086015261099783826108de565b9250506040850151606085015260608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e085015181850152508091505092915050565b604051610100810167ffffffffffffffff81118282101715610a0457610a04610a3a565b60405290565b60005b83811015610a25578181015183820152602001610a0d565b83811115610a34576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfe608060405234801561001057600080fd5b5060405161082138038061082183398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610735806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610089578063e979e125146100a8578063f2fde38b146100bb57600080fd5b806304a9c33a1461006c578063715018a614610081575b600080fd5b61007f61007a366004610580565b6100ce565b005b61007f610177565b600054604080516001600160a01b039092168252519081900360200190f35b61007f6100b63660046105b3565b6101dd565b61007f6100c936600461055e565b6102dd565b6000546001600160a01b0316331461012d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001546001600160a01b0383811691161461014757600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905550565b6000546001600160a01b031633146101d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610124565b6101db60006103bf565b565b6000546001600160a01b031633146102375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610124565b600280546001810182556000919091528151805183926008027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01916102829183916020019061041c565b50602082810151805161029b926001850192019061041c565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155505050565b6000546001600160a01b031633146103375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610124565b6001600160a01b0381166103b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610124565b6103bc816103bf565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610428906106ae565b90600052602060002090601f01602090048101928261044a5760008555610490565b82601f1061046357805160ff1916838001178555610490565b82800160010185558215610490579182015b82811115610490578251825591602001919060010190610475565b5061049c9291506104a0565b5090565b5b8082111561049c57600081556001016104a1565b80356001600160a01b03811681146104cc57600080fd5b919050565b600082601f8301126104e257600080fd5b813567ffffffffffffffff808211156104fd576104fd6106e9565b604051601f8301601f19908116603f01168101908282118183101715610525576105256106e9565b8160405283815286602085880101111561053e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561057057600080fd5b610579826104b5565b9392505050565b6000806040838503121561059357600080fd5b61059c836104b5565b91506105aa602084016104b5565b90509250929050565b6000602082840312156105c557600080fd5b813567ffffffffffffffff808211156105dd57600080fd5b9083019061010082860312156105f257600080fd5b6105fa610684565b82358281111561060957600080fd5b610615878286016104d1565b82525060208301358281111561062a57600080fd5b610636878286016104d1565b60208301525060408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b604051610100810167ffffffffffffffff811182821017156106a8576106a86106e9565b60405290565b600181811c908216806106c257607f821691505b602082108114156106e357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212200f07e56a8b789db4a26037e9bca61c213ec314ac9bc6c2ca4da1a44633394bd064736f6c63430008070033a26469706673582212206dff8e10165299237ecc9b9d6d20a45153d7e06369d01c92dc0ea5c4cf22a48064736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007c5760003560e01c8063715018a61161005b578063715018a61461012c5780638da5cb5b14610134578063f2fde38b1461014f578063fa2fe6fc1461016257600080fd5b80621e9335146100815780631ed713cc146100f457806342a5615d14610117575b600080fd5b6100d061008f36600461075e565b6001602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff81169061010090046001600160a01b031682565b6040805192151583526001600160a01b039091166020830152015b60405180910390f35b6101076101023660046107ac565b610175565b60405190151581526020016100eb565b61012a6101253660046107e9565b6101ab565b005b61012a6102ff565b6000546040516001600160a01b0390911681526020016100eb565b61012a61015d36600461073c565b610365565b61012a6101703660046107ac565b610447565b33600090815260016020526040808220905161019290849061090a565b9081526040519081900360200190205460ff1692915050565b6101b482610175565b61022b5760405162461bcd60e51b815260206004820152602660248201527f54726164696e674a6f75726e616c4170703a3a4a6f75726e616c20646f6e277460448201527f206578697374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3360009081526001602052604090819020905161024990849061090a565b908152604051908190036020018120547fe979e1250000000000000000000000000000000000000000000000000000000082526001600160a01b03610100909104169063e979e125906102a090849060040161095b565b600060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b50506040517f89aba1e7f5380a5962b1f94668186918bd92fd7074487de809e4f6fe9ddf4ac5925060009150a15050565b6000546001600160a01b031633146103595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610222565b610363600061061e565b565b6000546001600160a01b031633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610222565b6001600160a01b03811661043b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610222565b6104448161061e565b50565b80516104bb5760405162461bcd60e51b815260206004820152603160248201527f54726164696e674a6f75726e616c4170703a3a4a6f75726e616c2773206e616d60448201527f652063616e6e6f7420626520656d7074790000000000000000000000000000006064820152608401610222565b6104c481610175565b156105375760405162461bcd60e51b815260206004820152602860248201527f54726164696e674a6f75726e616c4170703a3a4a6f75726e616c20616c72656160448201527f64792065786973740000000000000000000000000000000000000000000000006064820152608401610222565b60003360405161054690610686565b6001600160a01b039091168152602001604051809103906000f080158015610572573d6000803e3d6000fd5b50336000908152600160205260408082209051929350909161059590859061090a565b90815260405190819003602001812080546001600160a01b038516610100027fffffffffffffffffffffff00000000000000000000000000000000000000000090911617600117815591507fad448cc016aa50d0399a7df873e09e3fad7ecb439ede634c9b865cf541293fd89061061190849033908790610926565b60405180910390a1505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61082180610a6a83390190565b80356001600160a01b03811681146106aa57600080fd5b919050565b600082601f8301126106c057600080fd5b813567ffffffffffffffff808211156106db576106db610a3a565b604051601f8301601f19908116603f0116810190828211818310171561070357610703610a3a565b8160405283815286602085880101111561071c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561074e57600080fd5b61075782610693565b9392505050565b6000806040838503121561077157600080fd5b61077a83610693565b9150602083013567ffffffffffffffff81111561079657600080fd5b6107a2858286016106af565b9150509250929050565b6000602082840312156107be57600080fd5b813567ffffffffffffffff8111156107d557600080fd5b6107e1848285016106af565b949350505050565b600080604083850312156107fc57600080fd5b823567ffffffffffffffff8082111561081457600080fd5b610820868387016106af565b9350602085013591508082111561083657600080fd5b90840190610100828703121561084b57600080fd5b6108536109e0565b82358281111561086257600080fd5b61086e888286016106af565b82525060208301358281111561088357600080fd5b61088f888286016106af565b60208301525060408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201528093505050509250929050565b600081518084526108f6816020860160208601610a0a565b601f01601f19169290920160200192915050565b6000825161091c818460208701610a0a565b9190910192915050565b60006001600160a01b0380861683528085166020840152506060604083015261095260608301846108de565b95945050505050565b602081526000825161010080602085015261097a6101208501836108de565b91506020850151601f1985840301604086015261099783826108de565b9250506040850151606085015260608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e085015181850152508091505092915050565b604051610100810167ffffffffffffffff81118282101715610a0457610a04610a3a565b60405290565b60005b83811015610a25578181015183820152602001610a0d565b83811115610a34576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfe608060405234801561001057600080fd5b5060405161082138038061082183398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610735806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610089578063e979e125146100a8578063f2fde38b146100bb57600080fd5b806304a9c33a1461006c578063715018a614610081575b600080fd5b61007f61007a366004610580565b6100ce565b005b61007f610177565b600054604080516001600160a01b039092168252519081900360200190f35b61007f6100b63660046105b3565b6101dd565b61007f6100c936600461055e565b6102dd565b6000546001600160a01b0316331461012d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001546001600160a01b0383811691161461014757600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905550565b6000546001600160a01b031633146101d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610124565b6101db60006103bf565b565b6000546001600160a01b031633146102375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610124565b600280546001810182556000919091528151805183926008027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01916102829183916020019061041c565b50602082810151805161029b926001850192019061041c565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155505050565b6000546001600160a01b031633146103375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610124565b6001600160a01b0381166103b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610124565b6103bc816103bf565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610428906106ae565b90600052602060002090601f01602090048101928261044a5760008555610490565b82601f1061046357805160ff1916838001178555610490565b82800160010185558215610490579182015b82811115610490578251825591602001919060010190610475565b5061049c9291506104a0565b5090565b5b8082111561049c57600081556001016104a1565b80356001600160a01b03811681146104cc57600080fd5b919050565b600082601f8301126104e257600080fd5b813567ffffffffffffffff808211156104fd576104fd6106e9565b604051601f8301601f19908116603f01168101908282118183101715610525576105256106e9565b8160405283815286602085880101111561053e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561057057600080fd5b610579826104b5565b9392505050565b6000806040838503121561059357600080fd5b61059c836104b5565b91506105aa602084016104b5565b90509250929050565b6000602082840312156105c557600080fd5b813567ffffffffffffffff808211156105dd57600080fd5b9083019061010082860312156105f257600080fd5b6105fa610684565b82358281111561060957600080fd5b610615878286016104d1565b82525060208301358281111561062a57600080fd5b610636878286016104d1565b60208301525060408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b604051610100810167ffffffffffffffff811182821017156106a8576106a86106e9565b60405290565b600181811c908216806106c257607f821691505b602082108114156106e357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212200f07e56a8b789db4a26037e9bca61c213ec314ac9bc6c2ca4da1a44633394bd064736f6c63430008070033a26469706673582212206dff8e10165299237ecc9b9d6d20a45153d7e06369d01c92dc0ea5c4cf22a48064736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "Contracts/TradingJournalApp.sol:TradingJournalApp",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 198,
        "contract": "Contracts/TradingJournalApp.sol:TradingJournalApp",
        "label": "userToJournal",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(UserJournal)349_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(UserJournal)349_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => struct UserJournal))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_struct(UserJournal)349_storage)"
      },
      "t_mapping(t_string_memory_ptr,t_struct(UserJournal)349_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct UserJournal)",
        "numberOfBytes": "32",
        "value": "t_struct(UserJournal)349_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(UserJournal)349_storage": {
        "encoding": "inplace",
        "label": "struct UserJournal",
        "members": [
          {
            "astId": 346,
            "contract": "Contracts/TradingJournalApp.sol:TradingJournalApp",
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 348,
            "contract": "Contracts/TradingJournalApp.sol:TradingJournalApp",
            "label": "journalAddress",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "32"
      }
    }
  }
}