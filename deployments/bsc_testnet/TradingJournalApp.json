{
  "address": "0xF2986E8eC297769E44DF2a71f1123BA7dcA35F57",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "journalAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "Name",
          "type": "string"
        }
      ],
      "name": "JournalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_journalName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_journalOwner",
          "type": "address"
        }
      ],
      "name": "Exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_JournalName",
          "type": "string"
        }
      ],
      "name": "createJournal",
      "outputs": [
        {
          "internalType": "address",
          "name": "newJournalAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "userToJournal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "initialized",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "journalAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7f487fd4a720b922e2e8917d028e942b856351967b3befb98df75ccf1f06d61c",
  "receipt": {
    "to": null,
    "from": "0xB341844B93831df1aBe8705f0b8260eCFd8E5Ce7",
    "contractAddress": "0xF2986E8eC297769E44DF2a71f1123BA7dcA35F57",
    "transactionIndex": 3,
    "gasUsed": "1010244",
    "logsBloom": "0x
    "blockHash": "0xb78b0edb6dc1a1dc39cbad78918ae0e64270a2f79cb2e03282f7d6bdbeaffc34",
    "transactionHash": "0x7f487fd4a720b922e2e8917d028e942b856351967b3befb98df75ccf1f06d61c",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 12845915,
        "transactionHash": "0x7f487fd4a720b922e2e8917d028e942b856351967b3befb98df75ccf1f06d61c",
        "address": "0xF2986E8eC297769E44DF2a71f1123BA7dcA35F57",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b341844b93831df1abe8705f0b8260ecfd8e5ce7"
        ],
        "data": "0x",
        "logIndex": 10,
        "blockHash": "0xb78b0edb6dc1a1dc39cbad78918ae0e64270a2f79cb2e03282f7d6bdbeaffc34"
      }
    ],
    "blockNumber": 12845915,
    "cumulativeGasUsed": "1382740",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "6e1462d1ad2fd2a17d3c41ce9ae6d9e8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"journalAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"}],\"name\":\"JournalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_journalName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_journalOwner\",\"type\":\"address\"}],\"name\":\"Exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_JournalName\",\"type\":\"string\"}],\"name\":\"createJournal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newJournalAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userToJournal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"journalAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/TradingJournalApp.sol\":\"TradingJournalApp\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"Contracts/TradingJournal.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.7;\\r\\npragma abicoder v2;\\r\\n\\r\\nimport \\\"../Structs/Trade.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingJournal is Ownable{\\r\\n\\r\\n    address journalOwner;\\r\\n    Trade[] trades;\\r\\n\\r\\n    // TODO: Complete event\\r\\n    event TradeAdded();\\r\\n\\r\\n    constructor(address _journalOwner){\\r\\n        journalOwner = _journalOwner;\\r\\n    }\\r\\n\\r\\n    function addTrade(Trade memory trade) public onlyOwner{\\r\\n        trades.push(trade);\\r\\n    }\\r\\n\\r\\n    function changeJournalOwner(address _journalOwner, address _newJournalOwner) public onlyOwner{\\r\\n\\r\\n        // TODO: mettre des require dans la fonction qui va apeller celle-ci\\r\\n\\r\\n        require(journalOwner == _journalOwner);\\r\\n        journalOwner = _newJournalOwner;\\r\\n    }\\r\\n\\r\\n    // TODO: Add functions which returns the first 25 journals of a use\\r\\n    function getTrades(string memory _journalName, address _journalOwner) public{\\r\\n        // TradingJournal(userToJournal[msg.sender][_journalName].journalAddress).getTrades(trade);\\r\\n    } \\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n\",\"keccak256\":\"0xbcf4de652f3295df117328d9049c9dc78589773426aab07dbccf16e1886cf9d2\",\"license\":\"GPL-3.0\"},\"Contracts/TradingJournalApp.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./TradingJournal.sol\\\";\\r\\nimport \\\"../Structs/UserJournal.sol\\\";\\r\\n\\r\\ncontract TradingJournalApp is Ownable {\\r\\n    // Associate journals to user, and journal's name to address\\r\\n    mapping(address => mapping(string => UserJournal)) public userToJournal;\\r\\n\\r\\n    // EVENTS\\r\\n    event JournalCreated(address journalAddress, address creator, string Name);\\r\\n\\r\\n    function Exists(string memory _journalName, address _journalOwner) public view returns(bool exists){\\r\\n        return userToJournal[_journalOwner][_journalName].initialized;\\r\\n    } \\r\\n\\r\\n    function createJournal(string memory _JournalName) public returns(address newJournalAddress){\\r\\n        require(bytes(_JournalName).length != 0,\\\"TradingJournalApp::Journal's name cannot be empty\\\");\\r\\n        require(!Exists(_JournalName,msg.sender),\\\"TradingJournalApp::Journal already exist\\\");\\r\\n\\r\\n        // Create new journal for user\\r\\n        TradingJournal tradingJournal = new TradingJournal(msg.sender);\\r\\n        address newTradingJournalAddr = address(tradingJournal); \\r\\n        \\r\\n        UserJournal storage newUserJournal = userToJournal[msg.sender][_JournalName];\\r\\n\\r\\n        newUserJournal.initialized = true;\\r\\n        newUserJournal.journalAddress = newTradingJournalAddr;\\r\\n\\r\\n        tradingJournal.transferOwnership(msg.sender);\\r\\n\\r\\n        emit JournalCreated(newTradingJournalAddr,msg.sender,_JournalName);\\r\\n\\r\\n        return newTradingJournalAddr;\\r\\n        \\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x171e0bfefc985e52253317a6e93b5c0a60db0334e2068fc92740c2d80fe76323\",\"license\":\"GPL-3.0\"},\"Structs/Trade.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nstruct Trade{\\r\\n    string name;\\r\\n    string symbol;\\r\\n\\r\\n    uint256 amountBuy;\\r\\n\\r\\n    uint256 buyDate;\\r\\n    uint256 buyPrice;\\r\\n\\r\\n    uint256 stopLossPrice;\\r\\n\\r\\n    uint256 sellDate;\\r\\n    uint256 sellPrice;\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xcc844b667a1dc45884d821a23bd5e13065f9e59bddee7db806e694957a1a7a31\",\"license\":\"GPL-3.0\"},\"Structs/UserJournal.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nstruct UserJournal{\\r\\n    bool initialized;\\r\\n    address journalAddress;\\r\\n}\",\"keccak256\":\"0x3e3bd6d953e90636a24bc6e28f364490db5ef4cac70966429d4d7515ac53e99a\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "Contracts/TradingJournalApp.sol:TradingJournalApp",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 208,
        "contract": "Contracts/TradingJournalApp.sol:TradingJournalApp",
        "label": "userToJournal",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(UserJournal)344_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_struct(UserJournal)344_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(string => struct UserJournal))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_struct(UserJournal)344_storage)"
      },
      "t_mapping(t_string_memory_ptr,t_struct(UserJournal)344_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct UserJournal)",
        "numberOfBytes": "32",
        "value": "t_struct(UserJournal)344_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(UserJournal)344_storage": {
        "encoding": "inplace",
        "label": "struct UserJournal",
        "members": [
          {
            "astId": 341,
            "contract": "Contracts/TradingJournalApp.sol:TradingJournalApp",
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 343,
            "contract": "Contracts/TradingJournalApp.sol:TradingJournalApp",
            "label": "journalAddress",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "32"
      }
    }
  }
}